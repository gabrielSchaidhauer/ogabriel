<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Gabriel Schaidhauer</title>
        <description>This is a personal blog where I can put my ideas and share with anyone interested</description>
        <link>https://ogabriel.com/</link>
        <atom:link href="https://ogabriel.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 25 Jan 2021 22:26:16 -0300</pubDate>
        <lastBuildDate>Mon, 25 Jan 2021 22:26:16 -0300</lastBuildDate>
        <generator>Jekyll v3.7.4</generator>
        
            <item>
                <title>Bancos de dados Chave e Valor</title>
                <description>&lt;p&gt;Bancos de dados chave e valor são uma categoria que abrange uma série de bancos de dados NoSQL com características similares. Apesar disto, nem todos são iguais, aqui vou explicar um pouco algumas destas características sem entrar a fundo nas especificidades de cada um.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Para saber mais sobre a definição de um banco de dados NoSQL, as diferenças que eles tem de um banco de dados relacional sobre o teorema de CAP entre outras coisas, um ótimo livro chamado &lt;a href=&quot;https://www.amazon.com.br/NoSQL-Distilled-Emerging-Polyglot-Persistence-ebook/dp/B0090J3SYW/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=&amp;amp;sr=&quot;&gt;NoSQL Distilled&lt;/a&gt;. Este livro abrange conceitos iniciais e gerais de bancos de dados NoSQL e serve como uma ótima base para quem quer aprender um pouco mais.&lt;/p&gt;

&lt;h2 id=&quot;como-assim-chave-e-valor&quot;&gt;Como assim chave e valor?&lt;/h2&gt;

&lt;p&gt;Um banco de dados chave valor é uma estrutura para armazenamento de dados que funciona de forma muito similar a uma estrutura de dados do tipo mapa ou um dicionário, onde nós temos uma chave. Esta chave é um identificador para um registro, é como se ela guardasse o endereço para o valor que procuramos.&lt;/p&gt;

&lt;p&gt;Utilizando uma analogia simples, pode se dizer que uma estrutura deste tipo é como a recepção de uma pousada. Ao chegar na pousada e informar a hospedagem a recepção nos entrega uma chave e esta chave contém o número do nosso quarto e nos permite acessá-lo. De posse dessa chave sempre conseguimos ter um acesso direto ao nosso quarto.&lt;/p&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/reception.jpg&quot; alt=&quot;Hotel Reception&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Trazendo isto um pouco mais perto da linguagem técnica podemos pensar também em um &lt;em&gt;&lt;a href=&quot;https://pt.wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;quartos&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;306&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;camas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LCD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;206&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;camas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LCD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tá-mas-onde-entra-o-banco-de-dados&quot;&gt;Tá mas onde entra o banco de dados?&lt;/h2&gt;

&lt;p&gt;Certo, se chegamos até aqui, provavelmente você já entendeu um pouco de como tudo isto funciona, e talvez até já tenha lidado com mapas e dicionários com algumas linguagens de programação, mas fica a pergunta, o que diabos isso tudo tem a ver com bancos de dados e o que são bancos de dados chave e valor, certo?&lt;/p&gt;

&lt;p&gt;Bom tem tudo a ver e você já vai ver porquê.&lt;/p&gt;

&lt;p&gt;De acordo com a definição da &lt;a href=&quot;https://www.oracle.com/br/database/what-is-database/&quot;&gt;Oracle&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Um banco de dados é uma coleção organizada de informações - ou dados - estruturadas, normalmente armazenadas eletronicamente em um sistema de computador&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nesta categoria se encaixam softwares cujo objetivo é manter dados de forma organizada:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/dynamodb/&quot;&gt;DynamoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.project-voldemort.com/voldemort/&quot;&gt;Voldemort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aqui trago somente 3 exemplos de bancos chave e valor mas esta lista não tem o objetivo de de ser exaustiva, Este &lt;a href=&quot;https://en.wikipedia.org/wiki/Key–value_database&quot;&gt;artigo&lt;/a&gt; possui uma lista mais completa caso seja do seu interesse.&lt;/p&gt;

&lt;p&gt;Estes bancos , embora não trabalhem exclusivamente como chave e valor, desempenham bem este papel.&lt;/p&gt;

&lt;p&gt;Bancos de dados Chave e Valor podem operar de duas formas: Em memória ou de forma híbrida.&lt;/p&gt;

&lt;h3 id=&quot;bancos-de-dados-em-memória&quot;&gt;Bancos de dados em memória&lt;/h3&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/memory.jpg&quot; alt=&quot;Memory&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Quando um banco de dados está configurado para trabalhar em memória, o que ocorre é que toda a informação é armazenada na memória RAM do servidor. Como tudo, quando falamos de software (e até em outras situações) existem pontos positivos e negativos.&lt;/p&gt;

&lt;p&gt;Como principal ponto positivo temos a velocidade. Bancos de dados operando exclusivamente em memória não precisam escrever a informação em disco e o acesso à memória é muito mais rápido que o acesso a disco, portanto são bancos onde a escrita e a leitura de informações é muito rápida.&lt;/p&gt;

&lt;p&gt;Em se tratando de bancos chave e valor a leitura de informações se torna muito rápida também pela forma como é armazenada pois similar a um mapa, a partir da chave temos acesso direto ao valor então na maior parte dos casos podemos dizer que teremos uma complexidade O(1) para a leitura de informações destes bancos de dados.&lt;/p&gt;

&lt;p&gt;Mas como &lt;a href=&quot;https://pt.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch&quot;&gt;não existe almoço grátis&lt;/a&gt; existem também alguns lados negativos desta abordagem.&lt;/p&gt;

&lt;p&gt;Como as informações estão em memória e a memória RAM é volátil, caso ocorra alguma falha, queda de energia, etc. esta informação pode ser inteiramente perdida. Outro ponto importante é que usualmente temos uma quantidade muito menor de memória RAM do que disco nos servidores, e esta não é facilmente expansível a ponto de podermos ter memória de forma elástica, inclusive pelo seu custo, sendo assim ficamos limitados a quantidade disponível de memória RAM, portanto é preciso tomar cuidado, tanto para garantir que estamos usando esta abordagem com dados que realmente valham a pena pois não teremos muito espaço, bem como, que esta informação não representa problema caso perdida ou possa ser realimentada de outra fonte.&lt;/p&gt;

&lt;h3 id=&quot;armazenamento-híbrido&quot;&gt;Armazenamento Híbrido&lt;/h3&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/bookshelf.jpg&quot; alt=&quot;Bookshelf&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Estes bancos geralmente não trabalham somente com armazenamento em disco, especialmente visto que o objetivo deles em geral é ter ótima performance, sendo assim normalmente eles trabalham com uma abordagem mais híbrida. Esta abordagem funciona, em geral, de forma que toda informação quando é gravada é persistida no disco, porém uma parte dela é mantida em memória para que o acesso seja rápido.&lt;/p&gt;

&lt;p&gt;O que é ou não mantido em memória vai depender da política de cada banco de dados e geralmente pode ser configurada de acordo com o seu caso de uso para definir a forma que melhor se adequa, podendo ser por exemplo os registros mais recentes, os registros mais acessados, etc.&lt;/p&gt;

&lt;p&gt;Ao utilizar esta abordagem não temos mais a limitação da quantidade de informação com base na memória RAM e sim no disco que geralmente é bem maior, bem como, caso ocorra alguma falha de hardware ou algo que ocasione a perda dos dados em memória, as informações não serão perdidas, visto que poderão ser recuperadas do disco. O ponto negativo disto é que em situações que fujam ao que foi configurado teremos o tempo de acesso ao disco adicionado às nossas buscas.&lt;/p&gt;

&lt;p&gt;À exceção de cenários específicos onde realmente podemos estar dispostos a perder as informações esta abordagem geralmente é preferível, visto que os tempos de acesso a disco vem se tornando cada vez mais rápidos à medida que tecnologias como SSD vão surgindo e sendo aprimoradas o que torna os contras desta abordagem cada vez menos relevantes face às vantagens presentes.&lt;/p&gt;

&lt;h2 id=&quot;modelagem&quot;&gt;Modelagem&lt;/h2&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/modeling.jpg&quot; alt=&quot;Modeling&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Quando já temos uma bagagem de um banco relacional, como geralmente é comum, temos a tendência de pensar a modelagem de dados de uma forma e as queries que iremos fazer decidimos depois. Isto ocorre, pois os bancos relacionais, trabalhando com sql, nos oferecem uma infinidade de formas de localizar um registro ou uma série de registros.&lt;/p&gt;

&lt;p&gt;Em geral isto não ocorre com bancos do tipo chave e valor, o modelo ideal de acesso é quando temos acesso direto a chave sem precisar realizar nenhum tipo de consulta. Na maior parte dos bancos, não é possível realizar uma busca dentro do valor. Para exemplificar imagine uma biblioteca que organiza os livros de forma que sempre é possível localizá-los se souber a estante e a prateleira.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;biblioteca&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A10:3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;titulo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Harry Potter e a Ordem da Fênix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.K. Rowling&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;titulo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Harry Potter e a Pedra Filosofal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.K. Rowling&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A10:12&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;titulo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;O Hobbit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.R.R. Tolkien&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;titulo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;O Senhor dos Anéis: A Sociedade do Anel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
               &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.R.R. Tolkien&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
           &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Caso saibamos qual a estante e a prateleira podemos localizar os livros da série Harry Potter por exemplo, porém não conseguimos realizar uma consulta para saber em quais estantes estão os livros de J.R.R. Tolkien.&lt;/p&gt;

&lt;p&gt;Portanto, com este tipo de banco de dados é importante que realizemos a modelagem dos dados já pensando na maneira como será o acesso deles. É muito importante que se pense muito bem qual será a chave usada para estes dados, pois ela será essencial na forma de acessá-los.&lt;/p&gt;

&lt;p&gt;Outro ponto importante sobre modelagem é o uso de aggregates, porém como isto não é um tema especifico de bancos chave e valor não vai ser alvo deste artigo, quem tiver interesse pode ler um pouco mais sobre isto &lt;a href=&quot;https://arleypadua.medium.com/porque-armazenar-agregados-com-nosql-b2a460ffe18a&quot;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;quando-usar&quot;&gt;Quando usar?&lt;/h2&gt;

&lt;p&gt;Como já vimos, bancos chave e valor, em geral, possuem um modelo de acesso às informações que estão salvas que é dependente do conhecimento prévio da chave que guarda estas informações. Este modelo de acesso faz com que existam cenários onde não conseguimos utilizar este banco de dados da melhor forma possível. Imagine buscar uma lista de produtos onde para exibir a informação de cada produto precisamos consultar novamente o banco de dados? Então, essa seria a combinação de uma má modelagem com um use case que não combina com o tipo de banco.&lt;/p&gt;

&lt;p&gt;Comumente, bancos de dados chave e valor são usados para armazenar informações que sejam uma unidade, tais como dados de sessão de um usuário, preferências de um usuário, carrinho de compras em e-commerce, etc.&lt;/p&gt;

&lt;p&gt;Obviamente o que indica se o seu caso de uso vai se adequar a um banco de dados deste tipo depende do seu modelo de negócio e da modelagem do banco e do sistema, pode ser que no seu cenário seja possível ter uma lista de produtos por exemplo associada a uma chave específica, mas é sempre importante estar atento a forma como vai se buscar os dados face às limitações deste tipo de banco.&lt;/p&gt;

&lt;h2 id=&quot;conclusão&quot;&gt;Conclusão&lt;/h2&gt;

&lt;p&gt;Bancos de dados chave e valor são ferramentas poderosas e não serei eu que irei fugir do clichê de dizer que com grandes poderes vem grandes responsabilidades. Ao trabalhar com este tipo de banco precisamos avaliar com muita calma se ele é o ideal para o nosso caso, Qual a forma de armazenamento que vamos usar, se o banco que estamos pensando oferece mais de uma opção, se temos uma ideia da modelagem que iremos aplicar com base nos usos que vamos ter, etc. Mesmo com tudo isso eles tem muitas vantagens em performance, volume de acessos e dados, então se ainda não conhecem vale a pena experimentar!&lt;/p&gt;

&lt;p&gt;Se tiver um tempinho me diga o que achou e vamos conversar!&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
                <pubDate>Thu, 21 Jan 2021 00:00:00 -0300</pubDate>
                <link>https://ogabriel.com/pt/2021-01-21-key-value-databases</link>
                <guid isPermaLink="true">https://ogabriel.com/pt/2021-01-21-key-value-databases</guid>
                
                <category>data%pt-BR%</category>
                
                <category>nosql%pt-BR%</category>
                
                
            </item>
        
            <item>
                <title>Key-Value Databases</title>
                <description>&lt;p&gt;Key-Value database is a term that defines several NoSQL databases with similar characteristics, but not all of them work the same way. Here I will explain some of these characteristics without going too deep on any specific feature.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;If you want to know a little more about NoSQL in general, the distinction between them and relational databases, the CAP theorem, etc. I recommend reading a great book called &lt;a href=&quot;https://www.amazon.com/NoSQL-Distilled-Emerging-Polyglot-Persistence-ebook/dp/B0090J3SYW/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=&amp;amp;sr=&quot;&gt;NoSQL Distilled&lt;/a&gt;. This book covers initial concepts around NoSQL and is a good starting point.&lt;/p&gt;

&lt;h2 id=&quot;what-do-you-mean-by-key-value&quot;&gt;What do you mean by key-value?&lt;/h2&gt;
&lt;p&gt;A key-value database is a database containing a structure to store data similarly to a Map or a Dictionary, where the structure holds a key, and this key is an identifier that points to a single record.
Using a simple analogy, this structure is like a hotel reception. When you get to the hotel a key is handed to you, this key contains your room number and gives you the ability to go into the room. In possession of this key, we can always go straight to our room.&lt;/p&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/reception.jpg&quot; alt=&quot;Hotel Reception&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Taking this to the technical field we could think of it as a &lt;em&gt;&lt;a href=&quot;https://wikipedia.org/wiki/JSON&quot;&gt;JSON&lt;/a&gt;&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rooms&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;306&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;beds&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LCD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;206&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;beds&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LCD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ok-but-where-the-database-goes-in&quot;&gt;Ok, but where the database goes in?&lt;/h2&gt;

&lt;p&gt;If we got here you already understood how key-values work, even may have dealt with Maps or Dictionaries using any programming language, but you could be asking yourself, Where the hell all of this are related to databases?&lt;/p&gt;

&lt;p&gt;Well, the answer is that is all related.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;https://www.oracle.com/database/what-is-database/&quot;&gt;Oracle&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A database is an organized collection of structured information, or data, typically stored electronically in a computer system&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Related to this definition we can point some software:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/dynamodb/&quot;&gt;DynamoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.project-voldemort.com/voldemort/&quot;&gt;Voldemort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just 3 examples. This is not an exhausting list, if you want to know more implementations of key-value databases you can check this &lt;a href=&quot;https://en.wikipedia.org/wiki/Key–value_database&quot;&gt;post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Besides some of these databases are not exclusively key-value, all of them perform this role very well.&lt;/p&gt;

&lt;p&gt;Key-Value databases can store data in two ways, In memory or Hybrid.&lt;/p&gt;

&lt;h3 id=&quot;in-memory-databases&quot;&gt;In-memory databases&lt;/h3&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/memory.jpg&quot; alt=&quot;Memory&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;A database configured to operate in-memory stores all of its information on the RAM. Everything in software engineering has tradeoffs and this situation is not an exception.&lt;/p&gt;

&lt;p&gt;The main benefit of using in-memory storage is speed. Databases storing data exclusively in-memory don’t need to write on disk and memory access is faster than disk access so these are databases with great reading and writing performance.&lt;/p&gt;

&lt;p&gt;When we talk about key-value databases the reading of data is even more optimized by the way data is stored. Using a structure similar to a &lt;a href=&quot;https://www.w3schools.com/java/java_hashmap.asp&quot;&gt;HashMap&lt;/a&gt;, using the key we have direct access to the stored information, usually, for this operation, we have O(1) complexity what is optimal performance.&lt;/p&gt;

&lt;p&gt;As we say &lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=There_ain%27t_no_such_thing_as_a_free_lunch&amp;amp;redirect=no&quot;&gt;there ain’t no such thing as a free lunch&lt;/a&gt; so there are also downsides to this approach.&lt;/p&gt;

&lt;p&gt;Since all the data is in memory and RAM is volatile if there is any kind of failure like a power outage or any other the data could be entirely lost.&lt;/p&gt;

&lt;p&gt;Another important aspect is the amount of memory available on servers. Usually, we have a lot less memory than disk storage, and memory is not that easy to scale. So, when using this kind of approach we get limited by the amount of memory available.&lt;/p&gt;

&lt;h3 id=&quot;hybrid-storage&quot;&gt;Hybrid Storage&lt;/h3&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/bookshelf.jpg&quot; alt=&quot;Bookshelf&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;These databases usually don’t work exclusively with disk storage. Focusing on the performance they commonly choose a hybrid approach. This works by storing all the information on disk but keeping some loaded for fast access.&lt;/p&gt;

&lt;p&gt;What is or is not kept in memory depends on the database configuration and, usually, can be customized accordingly to each use case. It can be configured to keep only more recent records or more accessed records in memory.&lt;/p&gt;

&lt;p&gt;Using this kind of storage we are not limited by memory anymore, having a lot more space to store data. Also, when using disk storage we don’t need to worry about data loss due to outages, if an outage happens the server can reload the data from disk to the memory based on his policies. The main downside of this approach is that 
when the use case doesn’t match the configured conditions the time to load the data from disk could be added to the operation.&lt;/p&gt;

&lt;p&gt;Excluding specific use cases where you are willing to lose data, the hybrid approach is preferred. In the last couple of years, the price and performance of disk storage have increased, especially with the advent of SSD technologies, which makes the downsides of the hybrid approach get less and less compelling.&lt;/p&gt;

&lt;h2 id=&quot;modeling&quot;&gt;Modeling&lt;/h2&gt;

&lt;figure class=&quot;image-card width-wide caption&quot;&gt;
  &lt;img src=&quot;/images/kv-database/modeling.jpg&quot; alt=&quot;Modeling&quot; /&gt;
  
  &lt;figcaption class=&quot;caption-text&quot;&gt;&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;If you already know relational databases you usually end up modeling the data at first and then you think on the queries after, as they are needed. It happens because on relational databases we have an infinity of ways of searching and fetching data, which does not happen on most NoSQL databases.&lt;/p&gt;

&lt;p&gt;This fact is especially true to key-value databases. Its ideal model is when we can have previous knowledge of the key, without having to search for it. On most key-value databases, we cannot search for data on the stored value. To better understand let’s see an example. Imagine a library where you can always find a book if you know it’s bookcase and shelf.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;library&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A10:3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Harry Potter and the Order of the Phoenix&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.K. Rowling&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Harry Potter and the Philosopher's Stone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.K. Rowling&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A10:12&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The Hobbit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.R.R. Tolkien&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The Lord of the Rings: The Fellowship of the Ring&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
              &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;J.R.R. Tolkien&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we know the bookcase and the shelf we can locate all the Harry Potter books available. However, we cannot find on which shelf the books of J.R.R Tolkien are.&lt;/p&gt;

&lt;p&gt;This shows us that using this kind of database we need to think carefully about the modeling of our data already thinking about how the data will be queried. We must define very well our keys since we must have the ability to easily find them.&lt;/p&gt;

&lt;p&gt;Another important aspect of the modeling is the definition of the aggregate, but, since this is not a specific aspect of key-value databases it will not be explained in this post. If you want to know more about it you can read &lt;a href=&quot;https://arleypadua.medium.com/why-keeping-aggregates-with-nosql-9e1d9f9920f2&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;when-you-should-use-it&quot;&gt;When you should use it&lt;/h2&gt;

&lt;p&gt;As we have seen, key-value databases, in general, have an access pattern where you should know the key that leads you to your data. This access pattern creates situations where key-value databases are not the best fit.&lt;/p&gt;

&lt;p&gt;Imagine listing products, but to list the products we would end up needing to fetch from the database each of the product details, this would be a good fit? It seems the combination of bad modeling and a use case that doesn’t match the database.&lt;/p&gt;

&lt;p&gt;Commonly, this kind of database should be used to store data that fit as a unity, such as user session, user preferences, shopping carts, etc.&lt;/p&gt;

&lt;p&gt;Obviously, it is relative to your business area and also your system modeling, in your system it may be for example that a product list would be associated with a specific key, but we need to be always aware of how we need to fetch the data and the database limitations.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Key-Value databases are powerful tools and won’t be I who will escape from the cliche of saying that with great power comes great responsibility. Working with this kind of database we need to evaluate carefully if this is the right choice for our use case, what kind of storage we are going to use, if it offers more than one if we know how our modeling will be, etc. Even with all the limitations, these databases provide great advantages in terms of performance and scalability, so if you still haven’t it is worth a try.&lt;/p&gt;

&lt;p&gt;If you want to leave a comment telling me what you think, let’s chat.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</description>
                <pubDate>Thu, 21 Jan 2021 00:00:00 -0300</pubDate>
                <link>https://ogabriel.com/en/2021-01-21-key-value-databases</link>
                <guid isPermaLink="true">https://ogabriel.com/en/2021-01-21-key-value-databases</guid>
                
                <category>data%en-US%</category>
                
                <category>nosql%en-US%</category>
                
                
            </item>
        
    </channel>
</rss>